allprojects {
    repositories {
        jcenter()
        flatDir {
            dirs '../../gearvrf-libs', '../../../GearVRf/GVRf/Framework/framework/build/outputs/aar'
        }
    }
}

android {
    compileSdkVersion 21
    buildToolsVersion "23.0.3"

    buildTypes {
        debug {
            resValue 'string', 'app_name', System.getProperty("appName")
        }
        release {
            resValue 'string', 'app_name', System.getProperty("appName")
        }
    }

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 19
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File(
                    output.outputFile.parent,
                    System.getProperty("appName") + ".apk")
        }
    }
}

task copyOculusSignature(type: Copy) {
    if (rootProject.hasProperty("OCULUS_SIGS_DIRECTORY")) {
        copy {
            from rootProject.property("OCULUS_SIGS_DIRECTORY")
            into 'src/main/assets'
            include 'oculussig_*'
        }
    }
}

preBuild {}.dependsOn copyOculusSignature

dependencies {
    compile(name: 'framework-debug', ext: 'aar')
    if (rootProject.hasProperty("no_oculus")) {
        if (file('../../gearvrf-libs/backend-debug.aar').exists()) {
            compile(name: 'backend-debug', ext: 'aar')
        } else {
            throw new GradleException('No backend aar available!')
        }
    } else {
        if (file('../../gearvrf-libs/backend-debug.aar').exists()) {
            compile(name: 'backend-debug', ext: 'aar')
        } else {
            throw new GradleException('No backend aar available!')
        }
        compile(name: 'google-vr-base', ext: 'aar')
        compile(name: 'google-vr-common', ext: 'aar')
    }
}
